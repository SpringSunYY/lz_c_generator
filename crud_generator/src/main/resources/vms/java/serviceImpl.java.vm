package ${packageName}.service.impl;

import java.util.List;
#foreach ($column in $columns)
#if($column.javaField == 'createTime' || $column.javaField == 'updateTime')
import java.util.Date;
#break
#end
#end
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import ${packageName}.mapper.${className}Mapper;
import ${packageName}.model.domain.${className};

import javax.xml.crypto.Data;
import {packageName}.service.I${className}Service;

/**
 * ${tableComment}Service业务层处理
 * 
 * @author ${author}
 */
@Service
public class ${className}ServiceImpl implements I${className}Service
{
    #set($classNameLower=${className.substring(0,1).toLowerCase()} + ${className.substring(1)})
    @Autowired
    private ${className}Mapper ${classNameLower}Mapper;

    /**
     * 查询${tableComment}
     *
     * @param ${isPkJavaField} ${tableComment}主键
     * @return ${className}
     */
        #set($isPkJavaFieldAttrName=${isPkJavaField.substring(0,1).toUpperCase()} + ${isPkJavaField.substring(1)})
    @Override
    public ${className} select${className}By${isPkJavaFieldAttrName}(${isPkJavaType} ${isPkJavaField})
    {
        return ${classNameLower}Mapper.select${className}By${isPkJavaFieldAttrName}(${isPkJavaField});
    }
    /**
     * 查询${tableComment}列表
     * 
     * @param ${classNameLower} ${tableComment}
     * @return List<${className}>
     */
    @Override
    public List<${className}> select${className}List(${className} ${classNameLower})
    {
        return ${classNameLower}Mapper.select${className}List(${classNameLower});
    }

    /**
     * 新增${tableComment}
     * 
     * @param ${classNameLower} ${tableComment}
     * @return 结果
     */
    @Override
    public int insert${className}(${className} ${classNameLower})
    {
#foreach ($column in $columns)
#if($column.javaField == 'createTime')
        ${classNameLower}.setCreateTime(new Date());
#end
#end
        return ${classNameLower}Mapper.insert${className}(${classNameLower});
    }

    /**
     * 修改${tableComment}
     * 
     * @param ${classNameLower} ${tableComment}
     * @return int
     */
    @Override
    public int update${className}(${className} ${classNameLower})
    {
#foreach ($column in $columns)
#if($column.javaField == 'updateTime')
        ${classNameLower}.setUpdateTime(new Date());
#end
#end
        return ${classNameLower}Mapper.update${className}(${classNameLower});
    }

    /**
     * 批量删除${tableComment}
     * 
     * @param ${isPkJavaField}s 需要删除的${tableComment}主键
     * @return int
     */
    @Override
    public int delete${className}By${isPkJavaFieldAttrName}s(${isPkJavaType}[] ${isPkJavaField}s)
    {
        return ${classNameLower}Mapper.delete${className}By${isPkJavaFieldAttrName}s(${isPkJavaField}s);
    }

    /**
     * 删除${tableComment}信息
     * 
     * @param ${isPkJavaField} ${tableComment}主键
     * @return int
     */
    @Override
    public int delete${className}By${isPkJavaFieldAttrName}(${isPkJavaType} ${isPkJavaField}){
        return ${classNameLower}Mapper.delete${className}By${isPkJavaFieldAttrName}(${isPkJavaField});
    }
}
