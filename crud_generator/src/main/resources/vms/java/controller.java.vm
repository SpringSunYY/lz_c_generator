package ${packageName}.controller;

import java.util.List;
import javax.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import ${packageName}.domain.${className};
import ${packageName}.service.I${className}Service;
#if($table.crud || $table.sub)
#elseif($table.tree)
#end

/**
 * ${functionName}Controller
 * 
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${moduleName}/${businessName}")
public class ${className}Controller
{
    @Autowired
    private I${className}Service ${className}Service;

    /**
     * 查询${functionName}列表
     */
    @GetMapping("/list")
    public List<${className}> list(${className} ${className})
    {
        return ${className}Service.select${className}List(${className});
    }



    /**
     * 获取${functionName}详细信息
     */
    @GetMapping(value = "/{${pkColumn.javaField}}")
    public ${className} getInfo(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField})
    {
        return ${className}Service.select${className}By${pkColumn.capJavaField}(${pkColumn.javaField});
    }

    /**
     * 新增${functionName}
     */
    @PostMapping
    public int add(@RequestBody ${className} ${className})
    {
        return ${className}Service.insert${className}(${className});
    }

    /**
     * 修改${functionName}
     */
    @PutMapping
    public int edit(@RequestBody ${className} ${className})
    {
        return ${className}Service.update${className}(${className});
    }

    /**
     * 删除${functionName}
     */
	@DeleteMapping("/{${pkColumn.javaField}s}")
    public int remove(@PathVariable ${pkColumn.javaType}[] ${pkColumn.javaField}s)
    {
        return ${className}Service.delete${className}By${pkColumn.capJavaField}s(${pkColumn.javaField}s);
    }
}
