package ${packageName}.mapper;

import java.util.List;
import ${packageName}.domain.${className};
#if($table.sub)
import ${packageName}.domain.${subclassName};
#end

/**
 * ${tableComment}Mapper接口
 * 
 * @author ${author}
 */
public interface ${className}Mapper
{
    /**
     * 查询${tableComment}
     * 
     * @param ${isPkJavaField} ${tableComment}主键
     * @return ${tableComment}
     */
    #set($isPkJavaFieldAttrName=${isPkJavaField.substring(0,1).toUpperCase()} + ${isPkJavaField.substring(1)})
    public ${className} select${className}By${isPkJavaFieldAttrName}(${isPkJavaType} ${isPkJavaField});

    /**
     * 查询${tableComment}列表
     * 
     * @param ${className} ${tableComment}
     * @return ${tableComment}集合
     */
    public List<${className}> select${className}List(${className} ${className});

    /**
     * 新增${tableComment}
     * 
     * @param ${className} ${tableComment}
     * @return int
     */
    public int insert${className}(${className} ${className});

    /**
     * 修改${tableComment}
     * 
     * @param ${className} ${tableComment}
     * @return int
     */
    public int update${className}(${className} ${className});

    /**
     * 删除${tableComment}
     * 
     * @param ${isPkJavaField} ${tableComment}主键
     * @return int
     */
    public int delete${className}By${isPkJavaFieldAttrName}(${isPkJavaType} ${isPkJavaField});

    /**
     * 批量删除${tableComment}
     * 
     * @param ${isPkJavaField}s 需要删除的数据主键集合
     * @return int
     */
    public int delete${className}By${isPkJavaFieldAttrName}s(${isPkJavaType}[] ${isPkJavaField}s);
}
